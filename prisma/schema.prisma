generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider          = "postgresql"
    url               = env("DATABASE_URL")
    directUrl         = env("DIRECT_URL")
    shadowDatabaseUrl = env("SHADOW_DATABASE_URL")
}

model Url {
    id           Int      @id @unique @default(autoincrement())
    paths        Path[]
    to_url       String
    time_created DateTime @default(now())
    updated_at   DateTime @updatedAt
    User         User?    @relation(fields: [userId], references: [id])
    userId       String?
}

model Path {
    id           Int      @id @unique @default(autoincrement())
    path         String   @unique
    url          Url      @relation(fields: [urlId], references: [id])
    urlId        Int
    time_created DateTime @default(now())
    updated_at   DateTime @updatedAt
}

//start authencation schema

model Account {
    id                String  @id @default(cuid())
    userId            String
    type              String
    provider          String
    providerAccountId String
    refresh_token     String? @db.Text
    access_token      String? @db.Text
    expires_at        Int?
    token_type        String?
    scope             String?
    id_token          String? @db.Text
    session_state     String?

    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id           String   @id @default(cuid())
    sessionToken String   @unique
    userId       String
    expires      DateTime
    user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id            String    @id @default(cuid())
    name          String?
    email         String?   @unique
    emailVerified DateTime?
    image         String?
    time_created  DateTime  @default(now())
    accounts      Account[]
    sessions      Session[]
    urls          Url[]
}

model VerificationToken {
    identifier String
    token      String   @unique
    expires    DateTime

    @@unique([identifier, token])
}

//end authencation schema
